{"componentChunkName":"component---src-templates-post-index-js","path":"/posts/2020-02-21-navbar-com-css-puro/","result":{"data":{"markdownRemark":{"id":"a4f71a02-cf77-58df-bdcd-fc8cf32ea669","html":"<p>Se você é um desenvolvedor web, com certeza já sofreu para posicionar os elementos html em tela, existem inúmeras técnicas de css que podemos utilizar na estilização das tags html.</p>\n<p>A verdade é que não existe errado e nem certo, apenas abordagens diferentes que podem ou não nos levar ao nosso objetivo final.</p>\n<p>Objetivo: construir um barra de navegação responsiva \"que se adapte a várias resoluções de dispositivos\", utilizando apenas css puro.</p>\n<h4>Web</h4>\n<p><img src=\"https://raw.githubusercontent.com/YagoLopes/blog-yagolopes.com/master/.github/web.png\" alt=\"Exemplo Web\"></p>\n<h4>Mobille</h4>\n<p><img src=\"https://raw.githubusercontent.com/YagoLopes/blog-yagolopes.com/master/.github/mobile.png\" alt=\"Exemplo Mobile\"></p>\n<p>Primeiro vamos criar dois arquivos para fazer a separação do nosso código: um com o nome de index.html e outro com nome style.css</p>\n<p>No arquivo index.html vamos colar o seguinte código:</p>\n<pre><code class=\"language-html\">&#x3C;!DOCTYPE html>\n&#x3C;html lang=\"en\">\n  &#x3C;head>\n    &#x3C;meta charset=\"UTF-8\" />\n    &#x3C;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    &#x3C;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    &#x3C;link rel=\"stylesheet\" href=\"style.css\" />\n    &#x3C;title>Document&#x3C;/title>\n  &#x3C;/head>\n\n  &#x3C;body>\n    &#x3C;nav>\n      &#x3C;h1>Titulo&#x3C;/h1>\n      &#x3C;div>\n        &#x3C;strong>item1&#x3C;/strong>\n        &#x3C;strong>item2&#x3C;/strong>\n      &#x3C;/div>\n    &#x3C;/nav>\n  &#x3C;/body>\n&#x3C;/html>\n</code></pre>\n<p>1.Basicamente utilizaremos uma tag nav que ficará reponsável por fazer toda a parte azul visível no exemplo:</p>\n<p>2.Dentro da nave colocaremos uma tag h1 que ficará responsável pelo título</p>\n<p>3.E por último uma tag div que servirá de lista para que possamos colocar os itens da lista representados pela tag strong</p>\n<p>.Bom com isso, se você abrir o arquivo em um navegador web, verá que os elementos já estão lá, porém, de uma forma totalmente desorganizada.</p>\n<p>.O que vamos fazer agora é organizar todos os elementos da tela</p>\n<p>.No arquivo styles.css vamos colar o seguinte código:</p>\n<pre><code class=\"language-css\">* {\n  margin: 0;\n  padding: 0;\n}\nbody {\n  height: 100%;\n  height: 100%;\n  display: flex;\n}\nnav {\n  width: 100%;\n  color: #fff;\n  background-color: royalblue;\n\n  justify-content: space-between;\n}\nnav:first-child {\n  font-size: 1em;\n  font-weight: 500;\n  font-family: sans-serif;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 10px;\n}\n\ndiv {\n  display: flex;\n  list-style-type: none;\n  justify-content: flex-end;\n  align-items: center;\n  width: 30%;\n  height: 100%;\n}\n\nstrong {\n  margin-right: 10px;\n}\n</code></pre>\n<p>1.O caracter <code>*</code> pode ser entendido como uma tag que represente todas as outras, o que vamos fazer, é zerar a margem de dentro e de fora de todas tags do html. Essa técnica é conhecida como reset css.</p>\n<p>2.Na tag body vamos garantir que ela seja 100% da tela e 100% altura da tela, e vamos torná-la uma tag flexível.</p>\n<p>2.Para a tag nav vamos:</p>\n<p>.Torná-la flexível\n.Dar a ela, o tamanho referente à largura máxima da tela\n.Definir a cor do texto como branca (#fff),\n.Definir a cor de fundo como azul (royalblue),\n.Justificar o conteúdo de dentro dela ao centro,</p>\n<p>3.Para o Título poderíamos ter aplicado os estilos na tag h1, porém o css tem uma funcionalidade interessante o nav:first-child, em inglês significa primeiro filho da tag nav ou seja, justamente o nosso h1</p>\n<p>.Vamos colocar nosso título em negrito\n.E definir uma margem a direita superior e inferior de 10 px</p>\n<p>4.Para a lista vamos :</p>\n<p>.torná-la flexível,\n.justificar todo o conteúdo no final da lista, ou seja, à direita\n.alinhar todo o conteúdo no centro da lista\n.para a largura, vamos usar 30% do valor do seu pai (nav) e altura 100% do valor do seu pai (nav)</p>\n<p>5.Por último, vamos colocar uma margem à esquerda nos itens da lista para que, eles não fiquem totalmente grudados</p>","frontmatter":{"title":"Criando uma barra de navegação simples utilizando css puro","date":"2020-02-21 22:42"}}},"pageContext":{"slug":"/posts/2020-02-21-navbar-com-css-puro/"}}}