{"componentChunkName":"component---src-templates-post-index-js","path":"/posts/2020-02-22-manipulando array no java script/","result":{"data":{"markdownRemark":{"id":"db27c8ae-3421-5328-abb4-3b37bfd6ca1f","html":"<h2>Manipulando Array no Java Script</h2>\n<p>Um array a grosso modo pode ser entendido como uma lista de \"elementos\", no Java Script um array é simbolizado pelos caracteres de chaves <code>[]</code> onde cada elemento é posicionado dentro das chaves e separados por vírgula<code>,</code>.\nPara o nosso exemplo vamos utilizar uma lista de usuários, onde cada elemento representará um usuário na lista, e dentro de cada usuário teremos os dados do mesmo como: nome, email, telefone entre outros...</p>\n<ol>\n<li>Vamos começar criando dois arquivos: um chamado usuarios.js onde ficará a nossa lista de usuários com o seguinte código.</li>\n</ol>\n<pre><code>module.exports = [\n  {\n    id: 1,\n    name: \"Leanne Graham\",\n    username: \"Bret\",\n    email: \"Sincere@april.biz\",\n    address: {\n      street: \"Kulas Light\",\n      suite: \"Apt. 556\",\n      city: \"Gwenborough\",\n      zipcode: \"92998-3874\",\n      geo: {\n        lat: \"-37.3159\",\n        lng: \"81.1496\"\n      }\n    },\n    phone: \"1-770-736-8031 x56442\",\n    website: \"hildegard.org\",\n    company: {\n      name: \"Romaguera-Crona\",\n      catchPhrase: \"Multi-layered client-server neural-net\",\n      bs: \"harness real-time e-markets\"\n    }\n  },\n  {\n    id: 2,\n    name: \"Ervin Howell\",\n    username: \"Antonette\",\n    email: \"Shanna@melissa.tv\",\n    address: {\n      street: \"Victor Plains\",\n      suite: \"Suite 879\",\n      city: \"Wisokyburgh\",\n      zipcode: \"90566-7771\",\n      geo: {\n        lat: \"-43.9509\",\n        lng: \"-34.4618\"\n      }\n    },\n    phone: \"010-692-6593 x09125\",\n    website: \"anastasia.net\",\n    company: {\n      name: \"Deckow-Crist\",\n      catchPhrase: \"Proactive didactic contingency\",\n      bs: \"synergize scalable supply-chains\"\n    }\n  },\n  {\n    id: 3,\n    name: \"Clementine Bauch\",\n    username: \"Samantha\",\n    email: \"Nathan@yesenia.net\",\n    address: {\n      street: \"Douglas Extension\",\n      suite: \"Suite 847\",\n      city: \"McKenziehaven\",\n      zipcode: \"59590-4157\",\n      geo: {\n        lat: \"-68.6102\",\n        lng: \"-47.0653\"\n      }\n    },\n    phone: \"1-463-123-4447\",\n    website: \"ramiro.info\",\n    company: {\n      name: \"Romaguera-Jacobson\",\n      catchPhrase: \"Face to face bifurcated interface\",\n      bs: \"e-enable strategic applications\"\n    }\n  }\n];\n</code></pre>\n<p>Basicamente o que fizemos foi criar um módulo no Java Script que exportará a lista de usuários, para que possamos acessá-la de outro arquivo.\nAgora vamos criar mais um arquivo, esse com o nome de index.js, e nele cole o seguinte código.</p>\n<pre><code>const usuarios = require(\"./usuarios\");\n</code></pre>\n<p>-O código acima faz a importação da lista de usuários presente no outro arquivo</p>\n<h3>Objetivos:</h3>\n<ol>\n<li>Encontre um usuário na lista</li>\n<li>Remova um usuário da lista</li>\n<li>Adicione um usuário na lista</li>\n</ol>\n<p>.(Objetivo 1) Para encontrar um usuário na lista basta utilizar a função <code>find</code> do Java Script.</p>\n<pre><code>const usuario = usuarios.find(usuario => usuario.name === \"Clementine Bauch\");\nconsole.log(usuario);\n</code></pre>\n<ul>\n<li>Criamos uma constante usuário que irá receber o valor retornado pelo find.</li>\n<li>O find precisa ser aplicado em um array por isso, estamos utilizando ele sobre a lista de usuários.</li>\n<li>O find irá procurar em todos os usuários presentes na lista, o usuário que tem o nome igual a \"Clementine Bauch\".</li>\n<li>Se tiver um usuário com esse nome, ele irá retorná-lo, se não, retornará undefined (indefinido/não existe)</li>\n</ul>\n<p>.(Objetivo 2) Para remover um elemento de um array no Java Script utilizamos a função splice.</p>\n<pre><code>console.log(usuarios.length);\nusuarios.splice(2, 1);\nconsole.log(usuarios.length);\n</code></pre>\n<p>O código acima mostra a quantidade de elementos da lista antes e depois de aplicarmos a função splice na lista.</p>\n<ul>\n<li>A função length conta a quantidade de registros da lista</li>\n<li>\n<p>O splice remove uma determinada quantidade de registro a partir de uma posição da lista, nesse caso a lista de usuários tem 3 usuários. Vamos remover 1 usuário a partir da posição 2, restando assim apenas 2 usuários, o usuário 1 e o usuário 3.</p>\n<p>. (Objetivo 3) Para inserir um novo usuário na lista, vamos utilizar a função push do Java Script</p>\n</li>\n</ul>\n<pre><code> const usuario = {\n   id: 4,\n   name: \"Patricia Lebsack\",\n   username: \"Karianne\",\n   email: \"Julianne.OConner@kory.org\",\n   address: {\n     street: \"Hoeger Mall\",\n     suite: \"Apt. 692\",\n     city: \"South Elvis\",\n     zipcode: \"53919-4257\",\n     geo: {\n       lat: \"29.4572\",\n       lng: \"-164.2990\"\n     }\n   },\n   phone: \"493-170-9623 x156\",\n   website: \"kale.biz\",\n   company: {\n     name: \"Robel-Corkery\",\n     catchPhrase: \"Multi-tiered zero tolerance productivity\",\n     bs: \"transition cutting-edge web services\"\n   }\n };\n</code></pre>\n<p>O código acima cria uma nova constante chamada de usuário, nela colocaremos os mesmos campos que a nossa lista de usuários espera: id, nome, username, email...</p>\n<pre><code> console.log(usuarios.length);\n usuarios.push(usuario);\n console.log(usuarios.length);\n</code></pre>\n<p>E por fim vamos aplicar a função push na lista de usuários, passando para ela o novo usuário que acabamos de criar.\nMostraremos a quantidade de registros da lista antes e depois para comprovar que o novo usuário já esta lá.</p>","frontmatter":{"title":"Manipulando Array no Java Script","date":"2020-02-22 15:30"}}},"pageContext":{"slug":"/posts/2020-02-22-manipulando array no java script/"}}}