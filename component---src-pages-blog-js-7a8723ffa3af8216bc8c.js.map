{"version":3,"sources":["webpack:///./src/components/Home/styles.js","webpack:///./src/components/Post/styles.js","webpack:///./src/context/PostContext.js","webpack:///./src/components/Post/index.js","webpack:///./src/components/Home/index.js","webpack:///./src/pages/blog.js"],"names":["Container","styled","div","PostList","Link","Title","header","Description","span","Separetor","PostContext","createContext","PostContextProvider","children","payload","useState","posts","setPosts","Provider","value","Post","useContext","map","node","Fragment","to","fields","slug","key","frontmatter","description","Home","query","data","allMarkdownRemark","edges","filter","layout","Helmet","charSet","rel","href"],"mappings":"qMAEaA,EAAYC,IAAOC,IAAV,wEAAGD,CAAH,+KAYTE,EAAWF,IAAOC,IAAV,uEAAGD,CAAH,iB,YCXRD,EAAYC,YAAOG,KAAV,wEAAGH,CAAH,yNAgBTI,EAAQJ,IAAOK,OAAV,oEAAGL,CAAH,0JASLM,EAAcN,IAAOO,KAAV,0EAAGP,CAAH,+IAUXQ,EAAYR,IAAOC,IAAV,wEAAGD,CAAH,4ECnCTS,EAAcC,0BAEZ,SAASC,EAAT,GAAqD,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAAW,EACxCC,mBAASD,GAA5BE,EAD2D,KACpDC,EADoD,KAGlE,OACC,kBAACP,EAAYQ,SAAb,CAAsBC,MAAO,CAAEH,QAAOC,aACpCJ,GCOWO,MAbf,WAEC,OADkBC,qBAAWX,GAArBM,MACKM,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAMC,SAAP,KACC,kBAACf,EAAD,MACA,kBAAC,EAAD,CAAWgB,GAAIF,EAAKG,OAAOC,KAAMC,IAAKL,EAAKG,OAAOC,MACjD,kBAACtB,EAAD,KAAQkB,EAAKM,YAAYvB,QACzB,kBAACC,EAAD,KAAcgB,EAAKM,YAAYC,mBCGpBC,EAVF,WACZ,OACC,kBAAC/B,EAAD,KACC,kBAACG,EAAD,KACC,kBAAC,EAAD,SCoBS6B,GArBE,sBAAoB,IAC5BhB,EAD2B,EAARiB,KACNC,kBAAkBC,MAAMC,QAC1C,kBAA0C,SAA1C,EAAGb,KAAgBM,YAAYQ,UAEhC,OACC,oCACC,kBAAC,IAAD,MACA,kBAACC,EAAA,EAAD,KACC,0BAAMC,QAAQ,UACd,gDACA,0BAAMC,IAAI,gBAAgBC,KAAK,0BAEhC,kBAAC7B,EAAD,CAAqBE,QAASE,GAC7B,kBAAC,IAAD,KACC,kBAAC,EAAD,UAOa","file":"component---src-pages-blog-js-7a8723ffa3af8216bc8c.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const Container = styled.div`\n display: flex;\n justify-content: center;\n height: 100vh;\n background-color: transparent;\n padding: 5% 25%;\n overflow-y: auto;\n @media only screen and (max-width: 600px) {\n  padding: 20px 25px;\n }\n`\n\nexport const PostList = styled.div`\n width: 100%;\n`\n","import styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nexport const Container = styled(Link)`\n text-decoration: none;\n padding: 7%;\n display: flex;\n align-items: center;\n flex-direction: column;\n cursor: pointer;\n border-radius: 4px;\n background: transparent;\n transition: background 0.2s;\n\n &:hover {\n  background: rgba(255, 255, 255, 0.1);\n }\n`\n\nexport const Title = styled.header`\n font-family: \"Google Sans\", Roboto, Arial, sans-serif;\n font-size: 22px;\n font-weight: 400;\n line-height: 40px;\n line-height: 135%;\n color: var(--primary);\n opacity: 0.7;\n`\nexport const Description = styled.span`\n max-width: 100%;\n margin-left: 10px;\n font-weight: 500;\n color: var(--white);\n opacity: 0.7;\n white-space: nowrap;\n text-overflow: ellipsis;\n overflow: hidden;\n`\nexport const Separetor = styled.div`\n width: 100%;\n height: 1px;\n background-color: var(--quinary);\n margin-top: 15px;\n`\n","import React, { createContext, useState } from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport const PostContext = createContext()\n\nexport default function PostContextProvider({ children, payload }) {\n const [posts, setPosts] = useState(payload)\n\n return (\n  <PostContext.Provider value={{ posts, setPosts }}>\n   {children}\n  </PostContext.Provider>\n )\n}\n\nPostContextProvider.propTypes = {\n children: PropTypes.node.isRequired,\n payload: PropTypes.shape({\n  fields: PropTypes.shape({\n   slug: PropTypes.string,\n  }).isRequired,\n  frontmatter: PropTypes.shape({\n   layout: PropTypes.string,\n   title: PropTypes.string,\n   header: PropTypes.string,\n   date: PropTypes.string,\n   description: PropTypes.string,\n   thumbnail: PropTypes.string,\n  }).isRequired,\n }),\n}\n","import React, { useContext } from \"react\"\nimport { Container, Title, Description, Separetor } from \"./styles\"\nimport { PostContext } from \"../../context/PostContext\"\n\nfunction Post() {\n const { posts } = useContext(PostContext)\n return posts.map(({ node }) => (\n  <React.Fragment>\n   <Separetor />\n   <Container to={node.fields.slug} key={node.fields.slug}>\n    <Title>{node.frontmatter.header}</Title>\n    <Description>{node.frontmatter.description}</Description>\n   </Container>\n  </React.Fragment>\n ))\n}\n\nexport default Post\n","import React from \"react\"\nimport { Container, PostList, Separetor } from \"./styles\"\nimport Post from \"../../components/Post\"\n\nconst Home = () => {\n return (\n  <Container>\n   <PostList>\n    <Post />\n   </PostList>\n  </Container>\n )\n}\n\nexport default Home\n","import React from \"react\"\nimport GlobalSyles, { Container } from \"../styles/globalSyles\"\nimport { Helmet } from \"react-helmet\"\nimport Home from \"../components/Home\"\nimport PostContextProvider from \"../context/PostContext\"\nimport { graphql } from \"gatsby\"\n\nexport default function({ data }) {\n const posts = data.allMarkdownRemark.edges.filter(\n  ({ node }) => node.frontmatter.layout === \"post\"\n )\n return (\n  <>\n   <GlobalSyles />\n   <Helmet>\n    <meta charSet=\"utf-8\" />\n    <title>yagolopes.com</title>\n    <link rel=\"yagolopes.com\" href=\"http://yagolopes.com\" />\n   </Helmet>\n   <PostContextProvider payload={posts}>\n    <Container>\n     <Home />\n    </Container>\n   </PostContextProvider>\n  </>\n )\n}\n\nexport const query = graphql`\n {\n  allMarkdownRemark {\n   edges {\n    node {\n     fields {\n      slug\n     }\n     frontmatter {\n      layout\n      title\n      header\n      date\n      description\n      thumbnail\n     }\n    }\n   }\n  }\n }\n`\n"],"sourceRoot":""}