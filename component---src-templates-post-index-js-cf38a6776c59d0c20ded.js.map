{"version":3,"sources":["webpack:///./src/templates/post/styles.js","webpack:///./src/templates/post/index.js"],"names":["Content","styled","div","query","post","data","markdownRemark","htmlContent","__html","html","Helmet","charSet","frontmatter","title","rel","href","fields","slug","dangerouslySetInnerHTML"],"mappings":"mKACaA,E,UAAUC,EAAOC,IAAV,kEAAGD,CAAH,6c,wBCqBPE,GAjBE,sBAAe,IACvBC,EADsB,EAAXC,KACCC,eACZC,EAAc,CAAEC,OAAQJ,EAAKK,MAEnC,OACC,oCACC,kBAACC,EAAA,EAAD,KACC,0BAAMC,QAAQ,UACd,+BAAQP,EAAKQ,YAAYC,OACzB,0BAAMC,IAAKV,EAAKQ,YAAYC,MAAOE,KAAMX,EAAKY,OAAOC,QAEtD,kBAACjB,EAAD,CAASkB,wBAAyBX,IAClC,kBAAC,IAAD,QAKe","file":"component---src-templates-post-index-js-cf38a6776c59d0c20ded.js","sourcesContent":["import styled from \"styled-components\"\nexport const Content = styled.div`\n display: flex;\n width: 100%;\n height: 100%;\n flex-direction: column;\n background-color: var(--primary);\n margin-top: 5px;\n font-size: 14px;\n padding: 0 10%;\n\n h1,\n h2,\n h3,\n h4,\n h5 {\n  margin-top: 5px;\n  font-weight: 500;\n  color: var(--white);\n  text-overflow: ellipsis;\n }\n\n h1 {\n  text-align: center;\n  font-size: 2.3em;\n }\n\n img {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  align-self: center;\n\n  max-width: 200px;\n  max-width: 300px;\n }\n\n p {\n  color: var(--white);\n  opacity: 0.7;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  line-height: 1.5;\n }\n\n a {\n  color: var(--link);\n }\n`\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Content } from \"./styles\"\nimport { Helmet } from \"react-helmet\"\nimport GlobalSyles from \"../../styles/globalSyles\"\nexport default ({ data }) => {\n const post = data.markdownRemark\n const htmlContent = { __html: post.html }\n\n return (\n  <>\n   <Helmet>\n    <meta charSet=\"utf-8\" />\n    <title>{post.frontmatter.title}</title>\n    <link rel={post.frontmatter.title} href={post.fields.slug} />\n   </Helmet>\n   <Content dangerouslySetInnerHTML={htmlContent} />\n   <GlobalSyles />\n  </>\n )\n}\n\nexport const query = graphql`\n query($slug: String!) {\n  markdownRemark(fields: { slug: { eq: $slug } }) {\n   html\n   fields {\n    slug\n   }\n   frontmatter {\n    title\n    header\n   }\n  }\n }\n`\n"],"sourceRoot":""}